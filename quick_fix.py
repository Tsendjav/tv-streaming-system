#!/usr/bin/env python3
"""
–•—É—Ä–¥–∞–Ω –∑–∞—Å–≤–∞—Ä–ª–∞—Ö —Å–∫—Ä–∏–ø—Ç
–ì–æ–ª –∞—Å—É—É–¥–ª—É—É–¥—ã–≥ —à–∏–π–¥—ç—Ö
"""
import os
import shutil
from pathlib import Path

def fix_server_config_import():
    """server_config import –∞–ª–¥–∞–∞–≥ –∑–∞—Å–∞—Ö"""
    print("üîß server_config import –∞–ª–¥–∞–∞ –∑–∞—Å–∞–∂ –±–∞–π–Ω–∞...")
    
    file_path = "streaming/refactored_streaming_tab.py"
    
    if not os.path.exists(file_path):
        print(f"‚ùå {file_path} —Ñ–∞–π–ª –æ–ª–¥—Å–æ–Ω–≥“Ø–π")
        return False
    
    try:
        # –§–∞–π–ª—ã–≥ —É–Ω—à–∏—Ö
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ë—É—Ä—É—É import-–≥ –∑–∞—Å–∞—Ö
        old_import = "from server_config import ServerConfig"
        new_import = "from models.server_config import ServerConfig"
        
        if old_import in content:
            content = content.replace(old_import, new_import)
            
            # –§–∞–π–ª–¥ –±—É—Ü–∞–∞–Ω –±–∏—á–∏—Ö
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ {file_path} —Ñ–∞–π–ª—ã–Ω import –∑–∞—Å–∞–≥–¥–ª–∞–∞")
            return True
        else:
            print(f"‚ÑπÔ∏è {file_path} —Ñ–∞–π–ª–¥ –∑–∞—Å–∞—Ö import –æ–ª–¥—Å–æ–Ω–≥“Ø–π")
            return True
            
    except Exception as e:
        print(f"‚ùå –ê–ª–¥–∞–∞: {e}")
        return False

def find_missing_playout_tab():
    """playout_tab.py —Ñ–∞–π–ª—ã–≥ –æ–ª–æ—Ö"""
    print("üîç playout_tab.py —Ñ–∞–π–ª—ã–≥ —Ö–∞–π–∂ –±–∞–π–Ω–∞...")
    
    target_path = "ui/tabs/playout_tab.py"
    
    if os.path.exists(target_path):
        print(f"‚úÖ {target_path} —Ñ–∞–π–ª –±–∞–π–Ω–∞")
        return True
    
    # Backup —Ö–∞–≤—Ç—Å—É—É–¥–∞–∞—Å —Ö–∞–π—Ö
    search_paths = [
        "backups/migration_*/playout_tab.py",
        "ui/tabs/playout_tab.py.backup",
        "playout_tab.py",
        "*/playout_tab.py"
    ]
    
    found_files = []
    for pattern in search_paths:
        found_files.extend(Path(".").glob(pattern))
    
    if found_files:
        print(f"üìÑ –û–ª–¥—Å–æ–Ω —Ñ–∞–π–ª—É—É–¥:")
        for i, file_path in enumerate(found_files, 1):
            print(f"   {i}. {file_path}")
        
        # –•–∞–º–≥–∏–π–Ω —à–∏–Ω—ç —Ñ–∞–π–ª—ã–≥ —Ö—É—É–ª–∞—Ö
        latest_file = max(found_files, key=lambda f: f.stat().st_mtime)
        
        try:
            # –•–∞–≤—Ç–∞—Å “Ø“Ø—Å–≥—ç—Ö
            os.makedirs("ui/tabs", exist_ok=True)
            
            # –§–∞–π–ª —Ö—É—É–ª–∞—Ö
            shutil.copy2(latest_file, target_path)
            print(f"‚úÖ {latest_file} ‚Üí {target_path} —Ö—É—É–ª–∞–≥–¥–ª–∞–∞")
            return True
            
        except Exception as e:
            print(f"‚ùå –•—É—É–ª–∞—Ö–∞–¥ –∞–ª–¥–∞–∞: {e}")
            return False
    else:
        print("‚ùå playout_tab.py —Ñ–∞–π–ª –æ–ª–¥—Å–æ–Ω–≥“Ø–π")
        return False

def analyze_streaming_files():
    """Streaming —Ñ–∞–π–ª—É—É–¥—ã–≥ —à–∏–Ω–∂–∏–ª–∂, –∞–ª—å –Ω—å —Ö—ç—Ä—ç–≥—Ç—ç–π–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ—Ö"""
    print("üìä Streaming —Ñ–∞–π–ª—É—É–¥—ã–≥ —à–∏–Ω–∂–∏–ª–∂ –±–∞–π–Ω–∞...")
    
    files_info = {
        "ui/tabs/streaming_tab.py": "“Æ–Ω–¥—Å—ç–Ω streaming tab",
        "streaming/final_refactored_streaming_tab.py": "–®–∏–Ω—ç—á–ª—ç–≥–¥—Å—ç–Ω —Ö—É–≤–∏–ª–±–∞—Ä",
        "streaming/refactored_streaming_tab.py": "–î—É–Ω–¥ —Ö—É–≤–∏–ª–±–∞—Ä (import –∞–ª–¥–∞–∞—Ç–∞–π)"
    }
    
    for file_path, description in files_info.items():
        if os.path.exists(file_path):
            size = os.path.getsize(file_path)
            print(f"üìÑ {file_path}")
            print(f"   üìù {description}")
            print(f"   üìè {size:,} bytes")
            
            # main.py-–¥ –∞—à–∏–≥–ª–∞–≥–¥–∞–∂ –±–∞–π–≥–∞–∞ —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞—Ö
            if os.path.exists("main.py"):
                with open("main.py", 'r', encoding='utf-8') as f:
                    main_content = f.read()
                    file_name = os.path.basename(file_path).replace('.py', '')
                    if file_name in main_content:
                        print(f"   ‚úÖ main.py-–¥ –∞—à–∏–≥–ª–∞–≥–¥–∞–∂ –±–∞–π–Ω–∞")
                    else:
                        print(f"   ‚ùå main.py-–¥ –∞—à–∏–≥–ª–∞–≥–¥–∞—Ö–≥“Ø–π –±–∞–π–Ω–∞")
        else:
            print(f"‚ùå {file_path} –æ–ª–¥—Å–æ–Ω–≥“Ø–π")

def test_application():
    """–ü—Ä–æ–≥—Ä–∞–º –∞–∂–∏–ª–ª–∞–≥–∞–∞–≥ —Ç–µ—Å—Ç —Ö–∏–π—Ö"""
    print("üß™ –ü—Ä–æ–≥—Ä–∞–º —Ç–µ—Å—Ç —Ö–∏–π–∂ –±–∞–π–Ω–∞...")
    
    try:
        # main.py structure —Ç–µ—Å—Ç
        result = os.system("python main.py structure")
        if result == 0:
            print("‚úÖ Structure —Ç–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π")
        else:
            print("‚ùå Structure —Ç–µ—Å—Ç –∞–ª–¥–∞–∞—Ç–∞–π")
        
        # main.py —Ç–µ—Å—Ç
        print("\nüß™ “Æ–Ω–¥—Å—ç–Ω –ø—Ä–æ–≥—Ä–∞–º —Ç–µ—Å—Ç —Ö–∏–π–∂ –±–∞–π–Ω–∞...")
        result = os.system("python main.py")
        if result == 0:
            print("‚úÖ “Æ–Ω–¥—Å—ç–Ω –ø—Ä–æ–≥—Ä–∞–º —Ç–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π")
        else:
            print("‚ùå “Æ–Ω–¥—Å—ç–Ω –ø—Ä–æ–≥—Ä–∞–º —Ç–µ—Å—Ç –∞–ª–¥–∞–∞—Ç–∞–π")
            
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç —Ö–∏–π—Ö—ç–¥ –∞–ª–¥–∞–∞: {e}")

def create_simple_cleanup():
    """–≠–Ω–≥–∏–π–Ω —Ü—ç–≤—ç—Ä–ª—ç—Ö –∫–æ–º–∞–Ω–¥ “Ø“Ø—Å–≥—ç—Ö"""
    print("üßπ –≠–Ω–≥–∏–π–Ω —Ü—ç–≤—ç—Ä–ª—ç—Ö –∫–æ–º–∞–Ω–¥—É—É–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...")
    
    commands = [
        "# Backup —Ö–∞–≤—Ç—Å—É—É–¥—ã–≥ —É—Å—Ç–≥–∞—Ö",
        'rmdir /s /q "backups\\migration_1751423526"',
        'rmdir /s /q "backups\\migration_1751423840"',
        'rmdir /s /q "backups\\migration_1751423958"',
        'rmdir /s /q "backups\\migration_1751424107"',
        'rmdir /s /q "backups\\migration_1751424467"',
        'rmdir /s /q "backups\\migration_1751425256"',
        'rmdir /s /q "backups\\migration_1751425702"',
        "",
        "# Backup —Ñ–∞–π–ª—É—É–¥—ã–≥ —É—Å—Ç–≥–∞—Ö",
        'del "main.py.backup"',
        'del "main.py.corrupted"',
        'del "ui\\main_window.py.backup"',
        'del "ui\\tabs\\streaming_tab_backup_20250702.py"',
        "",
        "# –¢–µ—Å—Ç —Ñ–∞–π–ª—É—É–¥—ã–≥ —É—Å—Ç–≥–∞—Ö",
        'del "test_streaming.py"',
        'del "test_ubuntu_connection.py"',
        'del "integration_usage_example.py"',
        "",
        "# –î–∞–≤—Ö–∞—Ä–¥—Å–∞–Ω streaming —Ñ–∞–π–ª—ã–≥ —É—Å—Ç–≥–∞—Ö",
        'del "streaming\\refactored_streaming_tab.py"',
        "",
        "echo –¶—ç–≤—ç—Ä–ª—ç–≥–¥–ª—ç—ç!"
    ]
    
    with open("simple_cleanup.bat", 'w', encoding='ascii', errors='ignore') as f:
        f.write('\n'.join(commands))
    
    print("‚úÖ simple_cleanup.bat —Ñ–∞–π–ª “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç")

def main():
    print("üöÄ –•—É—Ä–¥–∞–Ω –∑–∞—Å–≤–∞—Ä–ª–∞—Ö —Å–∫—Ä–∏–ø—Ç —ç—Ö—ç–ª–ª—ç—ç")
    print("=" * 50)
    
    success_count = 0
    
    # 1. server_config import –∑–∞—Å–∞—Ö
    if fix_server_config_import():
        success_count += 1
    
    # 2. playout_tab.py —Ñ–∞–π–ª –æ–ª–æ—Ö
    if find_missing_playout_tab():
        success_count += 1
    
    # 3. Streaming —Ñ–∞–π–ª—É—É–¥ —à–∏–Ω–∂–∏–ª—ç—Ö
    analyze_streaming_files()
    
    # 4. –¢–µ—Å—Ç —Ö–∏–π—Ö
    if success_count >= 1:
        test_application()
    
    # 5. –≠–Ω–≥–∏–π–Ω —Ü—ç–≤—ç—Ä–ª—ç—Ö –∫–æ–º–∞–Ω–¥ “Ø“Ø—Å–≥—ç—Ö
    create_simple_cleanup()
    
    print(f"\nüìà –î“Ø–Ω: {success_count}/2 –∞—Å—É—É–¥–∞–ª —à–∏–π–¥—ç–≥–¥–ª—ç—ç")
    
    if success_count == 2:
        print("üéâ –ë“Ø—Ö –∞—Å—É—É–¥–∞–ª —à–∏–π–¥—ç–≥–¥–ª—ç—ç!")
        print("–î–∞—Ä–∞–∞–≥–∏–π–Ω –∞–ª—Ö–∞–º: simple_cleanup.bat –∞–∂–∏–ª–ª—É—É–ª–∞—Ö")
    else:
        print("‚ö†Ô∏è –ó–∞—Ä–∏–º –∞—Å—É—É–¥–∞–ª —à–∏–π–¥—ç–≥–¥—ç—ç–≥“Ø–π –±–∞–π–Ω–∞")
        print("–ì–∞—Ä–∞–∞—Ä —à–∞–ª–≥–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π")

if __name__ == "__main__":
    main()